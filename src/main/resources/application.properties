spring.application.name=stock-price-analytics
spring.datasource.url=jdbc:postgresql://localhost:5432/stock-data?cachePrepStmts=true&useServerPrepStmts=true&rewriteBatchedStatements=true
spring.datasource.username=postgres
spring.datasource.password=postgres
# create, create-drop, none, update, validate
spring.jpa.hibernate.ddl-auto = update

spring.jpa.properties.hibernate.jdbc.batch_size=250
spring.jpa.properties.hibernate.order_inserts=true
#spring.jpa.show-sql=true

logging.level.org.springframework=WARN
logging.level.stock.price.analytics.service.DailyPriceOHLCService=WARN
logging.level.stock.price.analytics.service.PriceOHLCService=WARN

# KEEP these here in order for Spring Boot to know where to look for html file
spring.mvc.static-path-pattern=/static/**
spring.web.resources.static-locations=classpath:/static/


spring.logging.level.root=WARN

finnhub.apikey=cphdb19r01qp5iv5dv30cphdb19r01qp5iv5dv3g
stock.prices.outputfile=D://stocks-data/stocks-prices-intraday/
stock.financial.data.input.directory=D://stocks-data/stocks-data-input-json/

# YAHOO-FINANCE-API still working endpoint
# https://query2.finance.yahoo.com/v1/test/getcrumb and then add crumb below
# https://query2.finance.yahoo.com/v7/finance/quote?symbols=ORCL,AAPL&crumb=492rP6MvNzJ
# https://query2.finance.yahoo.com/v7/finance/quote?symbols=ORCL,AAPL&crumb=OZL609SXE8I
# https://query2.finance.yahoo.com/v7/finance/quote?symbols=ORCL,AAPL&crumb=Bpfozx1hcOl